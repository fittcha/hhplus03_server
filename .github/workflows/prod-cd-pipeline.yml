name: Prod CD Pipeline

on:
  push:
    branches: [ 'master' ]

env:
  ENVIRONMENT: prod
  AWS_REGION: ap-northeast-2
  ECR_REGISTRY: 767398047998.dkr.ecr.ap-northeast-2.amazonaws.com
  ECR_REPOSITORY: hhplus-prod
  JAVA_VERSION: '17'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build Docker Image
        run: docker build . -t myapp:latest

      - name: Run Tests in Docker Container
        run: docker run -e PROFILE=test myapp:latest ./gradlew test

  prod-cd:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login AWS ECR service
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push production image to Amazon ECR
        run: |
          docker build -t ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:prod-${{ github.sha }} .
          docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:prod-${{ github.sha }}

      - name: Render ECS task-definition
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: .taskdefinition/task-definition.json
          container-name: service-prod
          image: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:prod-${{ github.sha }}

      - name: Deploy Amazon ECS task-definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-task-definition.outputs.task-definition }}
          service: hhplus-prod
          cluster: cluster-hhplus-prod
          wait-for-service-stability: true
