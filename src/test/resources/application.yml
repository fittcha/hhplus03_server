server:
  servlet:
    encoding:
      force-response: true
spring:
  profiles:
    active: test

  datasource:
    url: "jdbc:mysql://localhost:3306/hhplus?serverTimezone=Asia/Seoul&characterEncoding=UTF-8&autoReconnect=true&createDatabaseIfNotExist=true"
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: 1234

  jpa:
    database: mysql
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        default_batch_fetch_size: 500 # 지연로딩으로 발생해야 하는 쿼리를 IN절로 한번에 모아보내는 기능

  data:
    redis:
      host: localhost
      password:
      port: 6379
      database: 0

  session:
    redis:
      namespace: hhplus-waiting-test
      repository-type: indexed

  kafka:
    producer:
      bootstrap-servers: ${spring.embedded.kafka.brokers}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      bootstrap-servers: ${spring.embedded.kafka.brokers}
      group-id: hhplus-01
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

  #  jpa:
  #    hibernate:
  #      ddl-auto: create
  #    show-sql: true
  #  datasource:
  #    driver-class-name: org.h2.Driver
  #    url: jdbc:h2:mem:testdb;MODE=MySQL;DB_CLOSE_DELAY=-1
  #    username: sa
  #    password:
  #  h2:
  #    console:
  #      enabled: true

logging:
  level:
    org:
      hibernate:
        SQL: DEBUG